import { SnowflakeColors } from "@/enums";
import { SnowflakeMentionType } from "@/enums/SnowflakeMentionType";
import { VerificationModuleModel } from "@/models/VerificationModel";
import { buttonStyle } from "@/utils/functions/buttonStyle";
import { isEnabled } from "@/utils/functions/isEnabled";
import { mentionOrNot } from "@/utils/functions/mentions";
import { snowflakeArraysFilter } from "@/utils/functions/snowflakeArraysFilter";
import {
  ActionRowBuilder,
  ButtonBuilder,
  ButtonInteraction,
  ButtonStyle,
  CommandInteraction,
  EmbedBuilder,
  StringSelectMenuBuilder,
} from "discord.js";

export async function VerificationResponse(
  interaction: ButtonInteraction | CommandInteraction
) {
  const verificationSettings =
    (await VerificationModuleModel.findOne({
      guildId: interaction.guild.id,
    })) ||
    (await VerificationModuleModel.create({ guildId: interaction.guild.id }));
  const embed = new EmbedBuilder()
    .setTitle(`–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`)
    .setFooter({
      text: interaction.user.globalName,
      iconURL: interaction.user.displayAvatarURL(),
    })
    .setColor(SnowflakeColors.DEFAULT)
    .setThumbnail(interaction.user.displayAvatarURL())
    .setFields(
      {
        name: `> –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª—è`,
        value: `**${isEnabled(verificationSettings.enable)}**`,
        inline: true,
      },
      {
        name: `> –ö–∞–Ω–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
        value: `${mentionOrNot(
          verificationSettings.channel,
          SnowflakeMentionType.CHANNEL
        )}`,
        inline: true,
      },
      {
        name: `> –†–æ–ª—å –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞`,
        value: `${mentionOrNot(
          verificationSettings.unverifyRole,
          SnowflakeMentionType.ROLE
        )}`,
        inline: false,
      }
    );
  const selectMenu =
    new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(
      new StringSelectMenuBuilder()
        .setCustomId(`verificationSettingsSelect_${interaction.user.id}`)
        .setPlaceholder(`–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É`)
        .addOptions(
          {
            label: `–ö–∞–Ω–∞–ª –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
            value: `setter_channel`,
            emoji: "‚úÖ",
            description: `–ú–µ—Å—Ç–æ –∫—É–¥–∞ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω —ç–º–±–µ–¥ –∏ –∫–Ω–æ–ø–∫–∏`,
          },
          {
            label: `–†–æ–ª—å –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞`,
            value: `setter_unverifyRole`,
            emoji: "üé≠",
            description: `–ï—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å, —Ç–æ–≥–¥–∞ –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–∞ —ç—Ç–∞ —Ä–æ–ª—å`,
          },
          {
            label: `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
            value: `roles`,
            emoji: "üí´",
            description: `–≠—Ç–∞ –æ–ø—Ü–∏—è –ø–æ–∑–≤–æ–ª–∏—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ä–æ–ª–µ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
          },
          {
            label: `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–º–±–µ–¥–æ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
            value: `embed`,
            emoji: "üé®",
            description: `–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –≤–µ–±—Ö—É–∫ –≤ –¥–∏—Å–∫–æ—Ö—É–∫–µ –∏ –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–Ω—å—Ç–µ, –±–æ—Ç —Å–¥–µ–ª–∞–µ—Ç –≤—Å—ë —Å–∞–º`,
          }
        )
    );
  const buttonRow = new ActionRowBuilder<ButtonBuilder>().addComponents(
    new ButtonBuilder()
      .setCustomId("toggleVerificationModule")
      .setLabel("–í–∫–ª—é—á–∏—Ç—å/–í—ã–∫–ª—é—á–∏—Ç—å")
      .setStyle(buttonStyle(verificationSettings.enable)),
    new ButtonBuilder()
      .setLabel(`–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å`)
      .setStyle(ButtonStyle.Secondary)
      .setCustomId("publishVerificationSettings"),
    new ButtonBuilder()
      .setCustomId("refreshVerificationSettings")
      .setLabel("–û–±–Ω–æ–≤–∏—Ç—å")
      .setStyle(ButtonStyle.Primary)
  );
  return { embeds: [embed], components: [selectMenu, buttonRow] };
}
